{"ast":null,"code":"var _jsxFileName = \"D:\\\\website E-commerce\\\\client\\\\src\\\\Context\\\\ShopContext.jsx\",\n  _s = $RefreshSig$();\nimport React, { createContext, useState } from \"react\";\nimport all_product from \"../Components/Assets/all_product\";\n\n/* Create a React context that other components can consume */\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const ShopContext = /*#__PURE__*/createContext(null);\n\n/* ---------------------------------------------------------\r\n   Utility: initialize an empty cart\r\n   - For each product ID, set the quantity to 0\r\n---------------------------------------------------------- */\nconst getDefaultCart = () => {\n  const cart = {};\n  all_product.forEach(p => cart[p.id] = 0);\n  return cart;\n};\n\n/* ---------------------------------------------------------\r\n   Context Provider Component\r\n   Wrap your App (or parts of it) with this provider so that\r\n   any child component can access cart data and functions.\r\n---------------------------------------------------------- */\nconst ShopContextProvider = props => {\n  _s();\n  /* React state to hold cart quantities, initialized to all zeros */\n  const [cartItem, setCartItem] = useState(getDefaultCart());\n\n  /* -------- Add one item to cart -------- */\n  const addToCart = itemId => setCartItem(prev => ({\n    ...prev,\n    [itemId]: prev[itemId] + 1\n  }));\n\n  /* -------- Remove one item (but not below 0) -------- */\n  const removeFromCart = itemId => setCartItem(prev => ({\n    ...prev,\n    [itemId]: Math.max(prev[itemId] - 1, 0)\n  }));\n\n  /* -------- Total number of items (for Navbar badge) -------- */\n  const getTotalCartItems = () => Object.values(cartItem).reduce((sum, qty) => sum + qty, 0);\n\n  /* -------- Grand total price -------- */\n  const getTotalCartAmount = () => {\n    let total = 0;\n\n    // Loop over each product ID in cart\n    for (const id in cartItem) {\n      const qty = cartItem[id];\n      if (qty > 0) {\n        // Find product info by ID\n        const info = all_product.find(p => p.id === Number(id));\n        if (info) total += info.new_price * qty; // Accumulate price * quantity\n      }\n    }\n    return total;\n  };\n\n  /* Values/functions we want to share with all children */\n  const contextValue = {\n    all_product,\n    // full product list\n    cartItem,\n    // cart quantities\n    addToCart,\n    // function to add\n    removeFromCart,\n    // function to remove\n    getTotalCartItems,\n    // total items for badge\n    getTotalCartAmount // grand total price\n  };\n\n  /* Wrap children with the provider so they can consume context */\n  return /*#__PURE__*/_jsxDEV(ShopContext.Provider, {\n    value: contextValue,\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 5\n  }, this);\n};\n_s(ShopContextProvider, \"Oi4Zp+4me/1TpMoYqkBO9XNOQJc=\");\n_c = ShopContextProvider;\nexport default ShopContextProvider; // Export the provider for use in App.jsx\nvar _c;\n$RefreshReg$(_c, \"ShopContextProvider\");","map":{"version":3,"names":["React","createContext","useState","all_product","jsxDEV","_jsxDEV","ShopContext","getDefaultCart","cart","forEach","p","id","ShopContextProvider","props","_s","cartItem","setCartItem","addToCart","itemId","prev","removeFromCart","Math","max","getTotalCartItems","Object","values","reduce","sum","qty","getTotalCartAmount","total","info","find","Number","new_price","contextValue","Provider","value","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/website E-commerce/client/src/Context/ShopContext.jsx"],"sourcesContent":["import React, { createContext, useState } from \"react\";\r\nimport all_product from \"../Components/Assets/all_product\";\r\n\r\n/* Create a React context that other components can consume */\r\nexport const ShopContext = createContext(null);\r\n\r\n/* ---------------------------------------------------------\r\n   Utility: initialize an empty cart\r\n   - For each product ID, set the quantity to 0\r\n---------------------------------------------------------- */\r\nconst getDefaultCart = () => {\r\n  const cart = {};\r\n  all_product.forEach((p) => (cart[p.id] = 0));\r\n  return cart;\r\n};\r\n\r\n/* ---------------------------------------------------------\r\n   Context Provider Component\r\n   Wrap your App (or parts of it) with this provider so that\r\n   any child component can access cart data and functions.\r\n---------------------------------------------------------- */\r\nconst ShopContextProvider = (props) => {\r\n  /* React state to hold cart quantities, initialized to all zeros */\r\n  const [cartItem, setCartItem] = useState(getDefaultCart());\r\n\r\n  /* -------- Add one item to cart -------- */\r\n  const addToCart = (itemId) =>\r\n    setCartItem((prev) => ({ ...prev, [itemId]: prev[itemId] + 1 }));\r\n\r\n  /* -------- Remove one item (but not below 0) -------- */\r\n  const removeFromCart = (itemId) =>\r\n    setCartItem((prev) => ({\r\n      ...prev,\r\n      [itemId]: Math.max(prev[itemId] - 1, 0),\r\n    }));\r\n\r\n  /* -------- Total number of items (for Navbar badge) -------- */\r\n  const getTotalCartItems = () =>\r\n    Object.values(cartItem).reduce((sum, qty) => sum + qty, 0);\r\n\r\n  /* -------- Grand total price -------- */\r\n  const getTotalCartAmount = () => {\r\n    let total = 0;\r\n\r\n    // Loop over each product ID in cart\r\n    for (const id in cartItem) {\r\n      const qty = cartItem[id];\r\n      if (qty > 0) {\r\n        // Find product info by ID\r\n        const info = all_product.find((p) => p.id === Number(id));\r\n        if (info) total += info.new_price * qty; // Accumulate price * quantity\r\n      }\r\n    }\r\n    return total;\r\n  };\r\n\r\n  /* Values/functions we want to share with all children */\r\n  const contextValue = {\r\n    all_product,         // full product list\r\n    cartItem,            // cart quantities\r\n    addToCart,           // function to add\r\n    removeFromCart,      // function to remove\r\n    getTotalCartItems,   // total items for badge\r\n    getTotalCartAmount,  // grand total price\r\n  };\r\n\r\n  /* Wrap children with the provider so they can consume context */\r\n  return (\r\n    <ShopContext.Provider value={contextValue}>\r\n      {props.children}\r\n    </ShopContext.Provider>\r\n  );\r\n};\r\n\r\nexport default ShopContextProvider; // Export the provider for use in App.jsx\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,QAAQ,QAAQ,OAAO;AACtD,OAAOC,WAAW,MAAM,kCAAkC;;AAE1D;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,OAAO,MAAMC,WAAW,gBAAGL,aAAa,CAAC,IAAI,CAAC;;AAE9C;AACA;AACA;AACA;AACA,MAAMM,cAAc,GAAGA,CAAA,KAAM;EAC3B,MAAMC,IAAI,GAAG,CAAC,CAAC;EACfL,WAAW,CAACM,OAAO,CAAEC,CAAC,IAAMF,IAAI,CAACE,CAAC,CAACC,EAAE,CAAC,GAAG,CAAE,CAAC;EAC5C,OAAOH,IAAI;AACb,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA,MAAMI,mBAAmB,GAAIC,KAAK,IAAK;EAAAC,EAAA;EACrC;EACA,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGd,QAAQ,CAACK,cAAc,CAAC,CAAC,CAAC;;EAE1D;EACA,MAAMU,SAAS,GAAIC,MAAM,IACvBF,WAAW,CAAEG,IAAI,KAAM;IAAE,GAAGA,IAAI;IAAE,CAACD,MAAM,GAAGC,IAAI,CAACD,MAAM,CAAC,GAAG;EAAE,CAAC,CAAC,CAAC;;EAElE;EACA,MAAME,cAAc,GAAIF,MAAM,IAC5BF,WAAW,CAAEG,IAAI,KAAM;IACrB,GAAGA,IAAI;IACP,CAACD,MAAM,GAAGG,IAAI,CAACC,GAAG,CAACH,IAAI,CAACD,MAAM,CAAC,GAAG,CAAC,EAAE,CAAC;EACxC,CAAC,CAAC,CAAC;;EAEL;EACA,MAAMK,iBAAiB,GAAGA,CAAA,KACxBC,MAAM,CAACC,MAAM,CAACV,QAAQ,CAAC,CAACW,MAAM,CAAC,CAACC,GAAG,EAAEC,GAAG,KAAKD,GAAG,GAAGC,GAAG,EAAE,CAAC,CAAC;;EAE5D;EACA,MAAMC,kBAAkB,GAAGA,CAAA,KAAM;IAC/B,IAAIC,KAAK,GAAG,CAAC;;IAEb;IACA,KAAK,MAAMnB,EAAE,IAAII,QAAQ,EAAE;MACzB,MAAMa,GAAG,GAAGb,QAAQ,CAACJ,EAAE,CAAC;MACxB,IAAIiB,GAAG,GAAG,CAAC,EAAE;QACX;QACA,MAAMG,IAAI,GAAG5B,WAAW,CAAC6B,IAAI,CAAEtB,CAAC,IAAKA,CAAC,CAACC,EAAE,KAAKsB,MAAM,CAACtB,EAAE,CAAC,CAAC;QACzD,IAAIoB,IAAI,EAAED,KAAK,IAAIC,IAAI,CAACG,SAAS,GAAGN,GAAG,CAAC,CAAC;MAC3C;IACF;IACA,OAAOE,KAAK;EACd,CAAC;;EAED;EACA,MAAMK,YAAY,GAAG;IACnBhC,WAAW;IAAU;IACrBY,QAAQ;IAAa;IACrBE,SAAS;IAAY;IACrBG,cAAc;IAAO;IACrBG,iBAAiB;IAAI;IACrBM,kBAAkB,CAAG;EACvB,CAAC;;EAED;EACA,oBACExB,OAAA,CAACC,WAAW,CAAC8B,QAAQ;IAACC,KAAK,EAAEF,YAAa;IAAAG,QAAA,EACvCzB,KAAK,CAACyB;EAAQ;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACK,CAAC;AAE3B,CAAC;AAAC5B,EAAA,CAnDIF,mBAAmB;AAAA+B,EAAA,GAAnB/B,mBAAmB;AAqDzB,eAAeA,mBAAmB,CAAC,CAAC;AAAA,IAAA+B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}